- name: Apt-Repo GPG Public Keys-Verzeichnis anlegen
  file: state=directory
        dest=/home/{{ apt_repo_user }}/{{ apt_md_dir }}/keys
        owner={{ apt_repo_user}}
        group={{ apt_repo_user}}

- name: Apt-Repo Bin-Verzeichnis anlegen
  file: state=directory
        dest=/home/{{ apt_repo_user }}/bin
        owner={{ apt_repo_user}}
        group={{ apt_repo_user}}

- name: Apt-Repo Sign Script kopieren
  copy:
       src={{ apt_md_sign }}
       dest=/home/{{ apt_repo_user }}/{{ apt_md_sign }}

- name: gnupg installieren
  apt: name=gnupg state=present

- name: gnupg Verzeichnis anlegen / Rechte prüfen
  file: dest=/home/{{ apt_repo_user }}/.gnupg 
        state=directory 
        mode=0700 
        owner={{ apt_repo_user }}
        group={{ apt_repo_user}}

- name: gnupg konfigurieren
  template:
        src=gen-key-script
        dest=/home/{{ apt_repo_user }}/.gnupg/gen-key-script
        owner={{ apt_repo_user }}
        group={{ apt_repo_user}}

- name: gnupg initialisieren
  shell: "gpg --check-trustdb"
  changed_when: false
  become: yes
  become_user: "{{ apt_repo_user }}"
  become_method: su

- name: gnupg -- Importverzeichnis für DEV GPG Schlüssel anlegen
  file: dest=/home/{{ apt_repo_user }}/.gnupg/import
        state=directory
        owner={{ apt_repo_user }}
        group={{ apt_repo_user }}

- name: gnupg -- Kopieren der DEV GPG Schlüssel
  copy: src={{ item }}
        dest=/home/{{ apt_repo_user }}/.gnupg/import
        owner={{ apt_repo_user }}
        group={{ apt_repo_user }}
  with_fileglob:
    - "gpg_keys/aptrepo-user/*.asc"

# FIXME: changed Status auf Basis stderr Ausgabe, eventuell nicht optimal
- name: gnupg -- Import der DEV GPG Schlüssel in Apt-Repo Account
  shell: "gpg --import /home/{{ apt_repo_user }}/.gnupg/import/{{ item | basename }}"
  register: out_gpg_dev_import
  changed_when: out_gpg_dev_import.stderr | search("import")
  with_fileglob:
    - gpg_keys/aptrepo-user/*.asc
  become: yes
  become_user: "{{ apt_repo_user }}"
  become_method: su

- name: gnupg -- ggf. vorhandenes Apt-Repo Schlüsselpaar suchen 
  shell: "gpg --list-secret-keys | grep '{{ apt_gpg_mail }}'"
  check_mode: no
  changed_when: false
  ignore_errors: true
  become: yes
  become_user: "{{ apt_repo_user }}"
  become_method: su
  register: gpg_apt

- name: haveged installieren (temporäre Entropie Quelle)
  apt:  name=haveged state=present
  when: gpg_apt is defined and gpg_apt.stdout == ""

- name: gnupg -- neuen Apt Schlüssel erstellen
  command: "gpg --batch --gen-key /home/{{ apt_repo_user }}/.gnupg/gen-key-script chdir=/home/{{ apt_repo_user }}"
  become: yes
  become_user: "{{ apt_repo_user }}"
  become_method: su
  when: gpg_apt is defined and gpg_apt.stdout == ""

- name: haveged deinstallieren (temporäre Entropie Quelle)
  apt: name=haveged state=absent
  when: gpg_apt is defined and gpg_apt.stdout == ""
