###############################################################################
# {{ ansible_managed }}
###############################################################################

# grundlegende Server-Einstellungen
mode server
tls-server
ifconfig {{ ugw_ip }} 255.255.0.0
port 1602
proto udp
max-clients 100

# Ohne die multihome-Option ermittelt openvpn selbst seine Quell-Adresse beim
# Beantworten von Anfragen. Dies ist fuer uns unerwuenscht, wenn es mehrere
# Wege zu den OpenVPN-Servern bzw. zu den Clients gibt.
# Testfall: on-v6 als Client gegenueber erina/subaru/megumi stellt seine
# Anfragen via Internet - der Server schickt jedoch seine Antworten mit privater
# Quell-IP via Mesh an die oeffentliche IP des Anfragenden. Hier kann der
# OpenVPN-Server (naturgemaess) nicht das Policy-Routing in Kombination mit den
# Firewall-Regeln auswerten.
multihome

# Zertifikate
ca /etc/openvpn/opennet_ugw/ca.crt
cert {{ openvpn_ugw_cert_file }}
key {{ openvpn_ugw_key_file }}
dh /etc/openvpn/dh2048.pem
# TODO: Aktivieren, sobald wir die neuen Server-Zertifikate verwenden
#crl-verify /etc/ssl/crl/opennet-vpn-ugw.crl

# Verbindungsdetails
keepalive 10 60
comp-lzo
# erlaube dem Client, seine IP zu wechseln (z.B. dynamische IP des DSL-Anschluss)
float

# Rechte
user openvpn
group openvpn

# Netzwerkschnittstelle
dev-type tap
dev {{ openvpn_ugw_interface }}
persist-key
persist-tun

# Logging
status /var/log/openvpn/opennet_ugw.status.log
# nur im Notfall fuer Debugging kurzfristig aktivieren und verbosity erhoehen
#log-append /var/log/openvpn/opennet_ugw.log
verb 0 
management localhost 7505

# IP-Ermittlung fuer den Client
script-security 2
client-connect /etc/openvpn/opennet_ugw/connect_script.py
