#!/bin/sh


. "$MUNIN_LIBDIR/plugins/plugin.sh"


set -eu

# verwende eine Kopie, um Locking-Konflikte zu vermeiden
ORIG_DATABASE="/tmp/database"
DATABASE=$(mktemp)
trap "rm -f '$DATABASE'" EXIT
cp "$ORIG_DATABASE" "$DATABASE"


execute_sql() {
	echo "$1;" | sqlite3 "$DATABASE"
}


get_versions() {
	execute_sql "SELECT DISTINCT on_core_ver from nodes" | sort --version-sort
}


get_version_count() {
	execute_sql "select COUNT() from nodes where on_core_ver='$1'"
}


# Es gibt einen ondataservice-Fehler, der bei der Uebertragung von "nodes"-Datensaetzen auftritt, sofern sie
# groesser als 2080 Byte sind. Dieser Fehler ist daran erkennbar, dass ein Eintrag in der ifaces-Tabelle vorliegt,
# jedoch keiner in der nodes-Tabelle.
get_broken_ondataservice_version_count() {
	local all_known
	all_full_submissions=$(sqlite3 "$DATABASE" 'select distinct mainip from nodes')
	all_partial_submissions=$(sqlite3 "$DATABASE" 'select distinct mainip from ifaces')
	echo "$all_partial_submissions" | while read ip; do
		echo "$all_full_submissions" | grep -qwF "$ip" || echo 1
	done | wc -l
}


get_missing_ondataservice_version_count() {
	local all_known
	all_known=$(sqlite3 "$DATABASE" 'select distinct mainip from ifaces')
	echo /topology | nc localhost 2006 | grep "^192\.168\.[1-9]\." | awk '{print $1}' | sort | uniq | while read ip; do
		echo "$all_known" | grep -qwF "$ip" || echo 1
	done | wc -l
}


if [ "${1:-}" = "config" ]; then
	echo "graph_title Firmware-Versionen auf APs"
	echo "graph_category opennet"
	echo "graph_vlabel Anzahl der APs"

	get_versions | while read version; do
		fieldname=$(clean_fieldname "$version")
		echo "$fieldname.label $version"
		echo "$fieldname.draw AREASTACK"
	done
	echo "broken_ondataservice.label unbekannt (ondataservice-Uebertragungsproblem)"
	echo "broken_ondataservice.draw AREASTACK"
	echo "unknown.label unbekannt (keine ondataservice-Daten)"
	echo "unknown.draw AREASTACK"
	exit 0
fi


get_versions | while read version; do
	fieldname=$(clean_fieldname "$version")
	echo "$fieldname.value $(get_version_count "$version")"
done
echo "unknown.value $(get_missing_ondataservice_version_count)"
echo "broken_ondataservice.value $(get_broken_ondataservice_version_count)"
