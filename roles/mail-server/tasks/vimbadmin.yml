- name: vimbadmin - Verzeichnis anlegen
  file:
    path: "{{ vimbadmin_path }}"
    state: directory
  register: create_vimbadmin

- name: vimbadmin - Software installieren (via composer)
  shell: "composer create-project --prefer-dist --no-dev opensolutions/vimbadmin {{ vimbadmin_path }} --no-scripts --no-interaction"
  args:
    creates: "{{ vimbadmin_path }}/CHANGELOG"
  when: create_vimbadmin.changed

- name: vimbadmin - Rechte Var-Verzeichnis anpassen
  file: 
    path: "{{ vimbadmin_path }}/var"
    state: directory
    owner: www-data
    group: www-data
    mode: "0770"
    recurse: yes

- name: vimbadmin - htaccess aktivieren
  copy:
    src: "{{ vimbadmin_path }}/public/.htaccess.dist"
    dest: "{{ vimbadmin_path }}/public/.htaccess"
    remote_src: yes
  when: create_vimbadmin.changed

- name: vimbadmin - Konfiguration aktivieren
  copy:
    src: "{{ vimbadmin_config }}.dist"
    dest: "{{ vimbadmin_config }}"
    remote_src: yes
  when: create_vimbadmin.changed

- name: vimbadmin - Konfiguration Salt vorbereiten
  command: "openssl rand -base64 32"
  register: vimbadmin_salt
  when: create_vimbadmin.changed

- name: vimbadmin - Konfiguration Salt setzen
  ini_file:
    path: "{{ vimbadmin_config }}"
    section: "user"
    option: "{{ item }}"
    value: "'{{ vimbadmin_salt.stdout }}'"
  loop:
    - "securitysalt"
    - "resources.auth.oss.rememberme.salt"
    - "defaults.mailbox.password_salt"
  when: create_vimbadmin.changed

- name: vimbadmin - Konfiguration anpassen
  ini_file:
    path: "{{ vimbadmin_config }}"
    section: "user"
    option: "{{ item.opt }}"
    value: "{{ item.val }}"
  loop:
    - { opt: "phpSettings.display_startup_errors", val: "{{ vimbadmin_config_showerrors }}" }
    - { opt: "phpSettings.display_errors", val: "{{ vimbadmin_config_showerrors }}" }
    - { opt: "resources.frontController.params.displayExceptions", val: "{{ vimbadmin_config_showerrors }}" }
    - { opt: "resources.doctrine2cache.type", val: "\"MemcacheCache\"" }
    - { opt: "resources.doctrine2cache.memcache.servers.0.host", val: "\"127.0.0.1\"" }
    - { opt: "skipInstallPingback", val: 1 }
    - { opt: "defaults.mailbox.maildir", val: "\"maildir:{{ vimbadmin_config_vmailpath }}/%d/%u/mail:LAYOUT=fs\"" }
    - { opt: "defaults.mailbox.homedir", val: "\"{{ vimbadmin_config_vmailpath }}/%d/%u\"" }
    - { opt: "server.pop3.enabled", val: 0 }
    - { opt: "server.imap.host", val: "\"mail.%d\"" }
    - { opt: "server.email.name", val: "\"{{ vimbadmin_config_name }}\"" }
    - { opt: "server.email.address", val: "\"{{ vimbadmin_config_mail }}\"" }
    - { opt: "identity.orgname", val: "\"{{ vimbadmin_config_org }}\"" }
    - { opt: "identity.name", val: "\"{{ vimbadmin_config_name }}\"" }
    - { opt: "identity.email", val: "\"{{ vimbadmin_config_mail }}\"" }
    - { opt: "identity.autobot.name", val: "\"{{ vimbadmin_config_name }}\"" }
    - { opt: "identity.autobot.email", val: "\"{{ vimbadmin_config_mail }}\"" }
    - { opt: "identity.mailer.name", val: "\"{{ vimbadmin_config_name }}\"" }
    - { opt: "identity.mailer.email", val: "\"{{ vimbadmin_config_mail }}\"" }
    - { opt: "identity.sitename", val: "\"{{ vimbadmin_config_name }} - ViMbAdmin\"" }
    - { opt: "identity.siteurl", val: "\"{{ vimbadmin_config_url }}\"" }
    - { opt: "ondemand_resources.logger.enabled", val: "{{ vimbadmin_config_enablelog }}" }

- name: vimbadmin - Datenbank anlegen
  mysql_db:
    name: vimbadmin
    login_unix_socket: "{{ mailserver_mysql_socket }}"
    state: present
  register: create_vimbadmin_db

- name: vimbadmin - Datenbank Passwort vorbereiten
  command: "openssl rand -base64 12"
  register: vimbadmin_db_pass
  when: create_vimbadmin_db.changed

- name: vimbadmin - Datenbank Benutzer anlegen
  mysql_user:
    name: vimbadmin
    password: "{{ vimbadmin_db_pass.stdout }}"
    priv: "vimbadmin.*:ALL"
    update_password: on_create
    column_case_sensitive: true
    login_unix_socket: "{{ mailserver_mysql_socket }}"
  register: create_vimbadmin_user
  when: create_vimbadmin_db.changed

- name: vimbadmin - Konfiguration Datenbank anpassen
  ini_file:
    path: "{{ vimbadmin_config }}"
    section: "user"
    option: "{{ item.opt }}"
    value: "{{ item.val }}"
  loop:
    - { opt: "resources.doctrine2.connection.options.dbname", val: "\"vimbadmin\"" }
    - { opt: "resources.doctrine2.connection.options.user", val: "\"vimbadmin\"" }
    - { opt: "resources.doctrine2.connection.options.password", val: "\"{{ vimbadmin_db_pass.stdout }}\"" }
  when: create_vimbadmin_user.changed

  when: create_vimbadmin_user.changed
